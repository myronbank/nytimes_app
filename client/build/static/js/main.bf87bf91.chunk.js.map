{"version":3,"sources":["components/loader/book-shelf-loader.gif","components/HeroSection.js","components/Button.js","components/Footer.js","components/CardItem.js","components/Cards.js","components/ny_times.js","components/SortButton.js","components/page/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroSection","className","src","autoPlay","loop","muted","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","Footer","name","placeholder","CardItem","props","Fragment","href","path","alt","title","text","date","Cards","image","abstract","url","NYTimesCards","articles","map","art","multimedia","published_date","split","splice","short_url","genre","section","Pagination","genres","key","Home","state","selectedGenre","isLoaded","handleSection","set","persist","setState","target","textContent","axios","get","process","data","this","createSet","results","array","a","push","newArray","_","uniq","newsArticles","filter","loader","Component","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bf87bf91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book-shelf-loader.edb8b3da.gif\";","import React from 'react';\nimport '../App.css';\nimport './HeroSection.css';\n\nfunction HeroSection() {\n  return (\n    <div className='hero-container'>\n      <video src='https://myronbankbank.s3-ap-southeast-1.amazonaws.com/video-3.mp4' autoPlay loop muted />\n      <h1>Top news in a glance</h1>\n      <p>Have an idea of what's happening around the world.</p>\n      <div className='hero-btns'>\n      </div>\n    </div>\n  );\n}\n\nexport default HeroSection;","import React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n    <Link to='/sign-up' className='btn-mobile'>\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n    </Link>\n  );\n};\n","import React from 'react';\nimport './Footer.css';\nimport { Button } from './Button';\n\nfunction Footer() {\n  return (\n    <div className='footer-container'>\n      <section className='footer-subscription'>\n        <p className='footer-subscription-heading'>\n          Join the newsletter to receive our monthly news picks !\n        </p>\n        <div className='input-areas'>\n          <form>\n            <input\n              className='footer-input'\n              name='email'\n              type='email'\n              placeholder='Your Email'\n            />\n            <Button buttonStyle='btn--outline'>Subscribe</Button>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction CardItem(props) {\n  return (\n    <React.Fragment>\n      <li className='cards__item'>\n        <a className='cards__item__link' href={props.path}>\n          <div className='cards__item__pic-wrap'>\n            <img\n              className='cards__item__img'\n              alt='article image'\n              src={props.src}\n            />\n          </div>\n          <div className=\"cards__item__info\">\n            <h5 className=\"cards__item__title\">{props.title}</h5>\n            <p className=\"cards__item__text\">{props.text}</p>\n            <span>{props.date}</span>\n          </div>\n        </a>\n      </li>\n    </React.Fragment>\n  );\n}\n\nexport default CardItem;\n","import React from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\n\nconst Cards = ({ image, title, abstract, date, path }) => {\n\n  image = image === null ? \"\" : image[0].url;\n  return (\n\n    <CardItem\n      src={image}\n      title={title}\n      text={abstract}\n      date={date}\n      path={path}\n    />\n  );\n}\n\nexport default Cards;\n","import React from 'react';\nimport Cards from './Cards';\n\nconst NYTimesCards = ({ articles }) => {\n  return (\n    <React.Fragment>\n      <div className='cards'>\n        <div className='cards__container'>\n          <div className='cards__wrapper'>\n            <ul className='cards__items'>\n              {articles.map(art =>\n                <Cards image={art.multimedia}\n                  title={art.title}\n                  abstract={art.abstract}\n                  date={art.published_date.split(\"T\").splice(0, 1)}\n                  path={art.short_url}\n                  genre={art.section}\n                />)}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default NYTimesCards;","import React from 'react';\nimport \"./SortButton.css\";\n\nconst Pagination = ({ genres, onClick }) => {\n  return (\n    <React.Fragment>\n      <div className=\"tab sticky\">\n        <div className=\"tab--container\">\n          {genres && genres.map(genre => {\n            return <button onClick={onClick} key={genre} className=\"tablinks\">{genre}</button>\n          })}\n        </div></div>\n    </React.Fragment >)\n}\n\nexport default Pagination;","import React, { Component } from 'react';\nimport '../../App.css';\nimport HeroSection from '../HeroSection';\nimport Footer from '../Footer';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport NYTimesCards from '../ny_times';\nimport SortButton from '../SortButton';\nimport loader from \"../loader/book-shelf-loader.gif\";\n\nclass Home extends Component {\n  state = {\n    articles: [],\n    genres: [],\n    selectedGenre: \"all\",\n    isLoaded: false\n  }\n\n  async componentDidMount() {\n    const { data } = await axios.get(process.env.REACT_APP_NY_TIMES_ACCESS_KEY);;\n    const genres = this.createSet(data.results);\n    this.setState({ articles: data.results, genres, isLoaded: true });\n  }\n\n  createSet(articles) {\n    let array = [];\n    articles.map(a => array.push(a.section));\n    const newArray = ['all', ...array]\n    return _.uniq(newArray);\n  }\n\n  handleSection = set => {\n    set.persist();\n    this.setState({ selectedGenre: set.target.textContent });\n  }\n\n  render() {\n    const { articles, genres, selectedGenre, isLoaded } = this.state;\n\n    const newsArticles = selectedGenre !== \"all\" ? articles.filter(a => a.section === selectedGenre) : articles;\n\n    return (\n      <React.Fragment>\n        {isLoaded && <HeroSection />}\n        {isLoaded && <SortButton genres={genres} onClick={this.handleSection} />}\n        {isLoaded ?\n          <NYTimesCards articles={newsArticles} /> : <img className=\"loader\" alt=\"image\" src={loader}></img>}\n        {isLoaded && <Footer />}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Home;\n\n\n","import React from 'react';\nimport './App.css';\nimport Home from './components/page/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path='/' exact component={Home} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}